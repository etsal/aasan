From 343421477acc3f4b83cf32cb5b07b9c4ac7ecc64 Mon Sep 17 00:00:00 2001
From: Emil Tsalapatis <emil@etsalapatis.com>
Date: Wed, 2 Jul 2025 16:27:48 -0400
Subject: [PATCH 2/9] [llvm] AddressSanitizer: add shadow offset for BPF target

---
 llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp b/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp
index 5ac22c707..3b307be20 100644
--- a/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp
+++ b/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp
@@ -119,6 +119,7 @@ static const uint64_t kNetBSDKasan_ShadowOffset64 = 0xdfff900000000000;
 static const uint64_t kPS_ShadowOffset64 = 1ULL << 40;
 static const uint64_t kWindowsShadowOffset32 = 3ULL << 28;
 static const uint64_t kWebAssemblyShadowOffset = 0;
+static const uint64_t kBPFShadowOffset = 7 << 27;
 
 // The shadow memory space is dynamically allocated.
 static const uint64_t kWindowsShadowOffset64 = kDynamicShadowSentinel;
@@ -507,6 +508,7 @@ static ShadowMapping getShadowMapping(const Triple &TargetTriple, int LongSize,
   bool IsHaiku = TargetTriple.isOSHaiku();
   bool IsWasm = TargetTriple.isWasm();
 
+  bool IsBPF = TargetTriple.isBPF();
   ShadowMapping Mapping;
 
   Mapping.Scale = kDefaultShadowScale;
@@ -582,6 +584,8 @@ static ShadowMapping getShadowMapping(const Triple &TargetTriple, int LongSize,
     else if (IsHaiku && IsX86_64)
       Mapping.Offset = (kSmallX86_64ShadowOffsetBase &
                         (kSmallX86_64ShadowOffsetAlignMask << Mapping.Scale));
+    else if (IsBPF)
+      Mapping.Offset = kBPFShadowOffset;
     else
       Mapping.Offset = kDefaultShadowOffset64;
   }
-- 
2.49.0

